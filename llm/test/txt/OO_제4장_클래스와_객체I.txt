
<0>
4장클래스와객체I파워자바(개정3판)

<1>
4장의목표

<2>
객체지향프로그래밍l객체(object)를사용하는프로그래밍방식을객체지향프로그래밍(OOP: Object-Oriented Programming)이라고한다. lOOP는실세계와비슷하게소프트웨어도작성해보자는방법론이다. 

<3>
객체지향프로그래밍l객체들은객체나름대로의고유한기능을수행하면서다른객체들과상호작용한다. l객체들은메시지(message)를통하여상호작용하고있다. 

<4>
객체l객체는상태와동작을가지고있다. l객체의상태(state)는객체의속성이다. l객체의동작(behavior)은객체가취할수있는동작이다. 

<5>
프로그래밍기법의발전

<6>
절차지향프로그래밍l절차지향프로그래밍은프로시저(procedure)에기반을두고있다. l“절차”라는용어는“procedure”를번역한것이며, 프로시저는함수또는서브루틴을뜻한다. l절차지향프로그래밍에서프로그램은함수(프로시저)들의집합으로이루어진다.

<7>
절차지향의문제점l서로관련있는함수와데이터가분리된다. l(예) 앞장의코드에서원의반지름을나타내는radius와이데이터를사용하는함수getCircleArea()는서로분리되어있다.

<8>
객체지향이나오게된동기l컴퓨터하드웨어는원하는부품을조립하여만들수있다.l컴퓨터소프트웨어는원하는함수를조립하여만들수없다. 코드와데이터를묶는방법이없었기때문이다. 

<9>
객체지향프로그래밍l객체지향프로그래밍(object-oriented programming)은데이터와함수를하나의덩어리로묶어서생각하는방법이다. 데이터와함수를하나의덩어리(객체)로묶는것을캡슐화(encapsulation)라고부른다.

<10>
객체지향프로그래밍의간단한예l앞의코드에서원의반지름과면적을계산하는함수를하나로묶으면다음과같다. 

<11>
절차지향vs 객체지향

<12>
객체지향의특징l객체지향언어는캡슐화, 상속및다형성으로정의된다

<13>
캡슐화l관련된데이터와알고리즘이하나의묶음으로정리되어있어야한다. 객체지향프로그래밍에서는이것을캡슐화(encapsulation)라고부른다.

<14>
캡슐화의목적l캡슐화에는2가지의목적이있다. 캡슐화의첫번째목적은서로관련된데이터와알고리즘을하나로묶는것이다.l캡슐화의두번째목적은객체를캡슐로싸서객체의내부를보호하는것이다. 즉객체의실제구현내용을외부에감추는것이다

<15>
정보은닉l정보은닉(information hiding)은객체의외부에서는객체의내부데이터를볼수없게한다는의미이다. l객체안의데이터와알고리즘은외부에서변경하지못하게막고, 공개된인터페이스를통해서만객체에접근하도록하는개념이다.

<16>
소프트웨어캡슐
소프트웨어캡슐내부가어떻게구성되어있으며어떻게돌아가는지전혀신경쓸필요가없다. 그냥사용법만익혀서사용하면된다
<17>
공개인터페이스l세탁기위에있는버튼이이것이바로클래스에정의된공개인터페이스에해당된다.

<18>
상속l자동차회사에서새로운모델을개발할때, 기존의모델을수정하는방법도많이선택한다(페이스리프트).l우리는이미작성된클래스(부모클래스)를이어받아서새로운클래스(자식클래스)를생성할수있다. 자식클래스는부모클래스의속성과동작을물려받는다.

<19>
다형성l다형성이란, 동일한이름의동작이라고하여도객체의실제타입에따라서동작의내용이달라질수있다는것을의미한다.

<20>
추상화l추상화(abstraction)는불필요한정보는숨기고중요한정보만을표현함으로써프로그램을간단히만드는기법이다. 추상화는요즘유행하는“미니멀리스트”를생각하면이해하기쉽다.

<21>
중간점검

<22>
클래스란?l객체에대한설계도를클래스(class)라고한다. 클래스란특정한종류의객체들을찍어내는형틀(template) 또는청사진(blueprint)이라고도할수있다. 클래스로부터만들어지는각각의객체를그클래스의인스턴스(instance)라고한다.

<23>
클래스란?l하나의클래스로여러개의인스턴스를찍어내지만, 인스턴스마다속성의값은다르다.

<24>
클래스의작성

<25>
클래스의작성
필드메소드
<26>
객체생성l클래스는객체를만들기위한설계도(틀)에해당된다. 설계도를가지고어떤작업을할수는없다. l실제로어떤작업을하려면객체를생성하여야한다

<27>
객체생성단계1.참조변수를선언2.new 연산자를사용하여서객체를생성하고객체의참조값을참조변수에저장3.객체의필드와메소드를사용

<28>
참조변수l참조변수는객체를참조할때사용되는변수로서여기에는객체의참조값이저장된다. 참조값은일반적으로객체의주소이다.

<29>
경고

<30>
예제: 

<31>
예제: 

<32>
예제:

<33>
예제:

<34>
예제: Television 클래스작성하고객체생성해보기

<35>
예제: Television 클래스작성하고객체생성해보기

<36>
중간점검

<37>
메소드오버로딩l자바에서는같은이름의메소드가여러개존재할수있다. 이것을메소드오버로딩(method overloading)이라고한다. 오버로딩을우리말로번역하자면“중복정의”라고할수있다.

<38>
예제

<39>
메소드오버로딩

<40>
생성자l생성자(constructor)는객체가생성될때객체를초기화하는특수한메소드이다.

<41>
생성자

<42>
생성자

<43>
예제

<44>
예제

<45>
기본생성자l기본생성자(default contrcutor)는매개변수가없는생성자이다. 만약개발자가생성자를하나도정의하지않으면자바컴파일러는기본생성자를자동으로만든다

<46>
기본생성자가추가되는않는경우

<47>
this참조변수
•this는현재객체자신을가리키는참조변수이다. this는컴파일러에서자동으로생성한다. 흔히생성자에서매개변수이름과필드이름이동일한경우에혼동을막기위해서사용한다
<48>
this()lthis()는다른생성자를의미한다.

<49>
TIP

<50>
중간점검

<51>
접근제어l접근제어(access control)란클래스의멤버에접근하는것을제어하는것이다. public이나private의접근지정자를멤버앞에붙여서접근을제한하게된다

<52>
자바의접근제어지정자
동일한클래스
<53>
예제

<54>
접근제어

<55>
접근자와설정자l필드값을반환하는접근자(getters), 필드값을설정하는설정자(setters)이다. 이러한메소드는대개get이나set이메소드이름앞에붙여진다. 예를들면getBalance()는접근자이고setBalance()는설정자이다.

<56>
잡근자와설정자예

<57>
접근자와설정자를사용하는이유l접근자와설정자를사용해야만나중에클래스를업그레이드할때편하다.l접근자에서매개변수를통하여잘못된값이넘어오는경우, 이를사전에차단할수있다.l필요할때마다필드값을동적으로계산하여반환할수있다.l접근자만을제공하면자동적으로읽기만가능한필드를만들수있다.

<58>
중간점검

<59>
Lab: 안전한배열만들기l만약인덱스가배열의크기를벗어나게되면실행오류가발생한다. 따라서실행오류를발생하지않는안전한배열을작성하여보자.
<<SafeArray>>
<60>
Lab: 안전한배열만들기

<61>
Lab: 안전한배열만들기

<62>
무엇을클래스로만들어야할까?lTV, 자동차와같이, 실제생활에서사용되는객체들은, 클래스로작성하기가비교적쉽다. 하지만프로그램안에서는실제생활에는사용되지않는, 추상적인객체들도많이존재한다.l요구사항이문서화되면클래스식별과정을시작할수있다. 요구사항에서클래스를식별하는한가지방법은모든“명사”를표시하는것이다.

<63>
메소드결정l요구사항문서에서“동사”에해당되는부분이메소드가되는경우가많다. 앞의요구사항문서에서“고객들은자신의계좌에돈을입금할수있으며계좌에서돈을인출할수있다.”라는문장이있다. 여기서“입금한다”, “인출한다”와같은동사는deposit(), withdraw() 메소드로매핑시킬수있다.

<64>
클래스간의관계를결정한다.l이러한클래스간의관계를설정하는부분은객체지향설계에서가장어려운부분이다. 개발자는많은결정을내려야한다. 가장중요한결정은다음의2가지이다.l상속(Inheritance)l구성(Composition)
<65>
UMLlUML(Unified Modeling Language):UML은클래스만을그리는도구는아니고객체지향설계시에사용되는일반적인모델링언어라고할수있다. lUML을사용하면소프트웨어를본격적으로작성하기전에구현하고자하는시스템을시각화하여검토할수있다. 

<66>
가시성표시자l필드나메소드의이름앞에는가시성표시자(visibility indicator)가올수있다.l+는public을, –는private을의미한다.

<67>
클래스간의관계

<68>
의존관계l의존(dependency)이란하나의클래스가다른클래스를사용하는관계이다.

<69>
중간점검

<70>
Lab: 자동차클래스작성l자동차를나타내는클래스를정의하여보자. 예를들어, 자동차객체의경우속성은색상, 현재속도, 현재기어등이다. 자동차의동작은기어변속하기, 가속하기, 감속하기등이있다.

<71>
Sol: 자동차클래스작성

<72>
Lab: 은행계좌클래스작성l은행계좌를클래스로정의하여보자. 먼저잔액은변수balance로표시한다. 예금입금은deposit() 메소드로, 예금인출은withdraw() 메소드로나타내면된다.

<73>
Sol: 은행계좌클래스작성

<74>
Lab: 윈도우생성해보기l자바에서윈도우를나타내는클래스는JFrame이다. 윈도우를만들때가장힘든작업이윈도우의기본값들을설정하는부분이다. 객체지향방법에서는“생성자”개념이있어서이부분이아주쉽게가능하다. 개발자가아무것도설정하지않아도생성자에서기본값으로설정된다

<75>
Sol: 윈도우생성해보기

<76>
MiniProject: 주사위클래스l주사위를Dice 클래스로모델링한다. Dice 클래스는주사위면(face)을필드로가지고있고roll(), getValue(), setValue() 등의메소드를가지고있다. 생성자에서는주사위면을0으로초기화한다.주사위1= 5 주사위2= 5주사위1= 3 주사위2= 4주사위1= 1 주사위2= 1(1, 1)이나오는데걸린횟수= 3

<77>
Summaryl객체지향방법은실세계가객체로구성되어있는것처럼소프트웨어도객체로구성하는방법론이다.l절차지향은함수를사용하여프로그램을작성하는방법이다. 함수는재사용하기가어렵다.l객체지향을이루고있는핵심적인개념에는“캡슐화”, “상속”, “다형성”, “추상화”등이있다.l캡슐화는객체의속성과동작을하나로묶는것을의미한다. 내부구현을알수없게은닉하는것도캡슐화에포함된다.l상속은다른클래스를재사용하는강력한방법이다.l객체는속성과동작으로정의된다. 프로그램에서는속성은필드로, 동작은메소드로구현된다.l자바에서는new를사용하여객체를생성한다.l객체를생성하기전에반드시객체를참조하는변수를먼저선언하여야한다.l메소드오버로딩이란이름은동일하지만매개변수가다른메소드를여러개정의하는것이다.

<78>
Q & A
