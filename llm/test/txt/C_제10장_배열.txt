
<0>
제10장배열
<1>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved이번장에서학습할내용
•반복의개념이해
•배열의개념
•배열의선언과초기화
•일차원배열
•다차원배열배열을
사용하면 한
번에여러개의
값을저장할수
있는공간을
할당받을 수
있다 .
<2>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved배열
배열을사용하면 한번에여러개의변수를생성할수있
다.
ints[10];

<3>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved배열의필요성

<4>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved배열선언

<5>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved배열원소와인덱스
인덱스 (index): 배열원소의번호

<6>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved배열선언의예
intscore[60];
float cost[12];
char name[50];// 60개의 int형값을가지는배열 score
// 12개의 float형값을가지는배열 cost
// 50개의 char형값을가지는배열 name

<7>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved배열요소접근
scores[5 ] = 80;
scores[1 ] =scores[0 ];
scores[ i] = 100; // i는정수변수
scores[i+2 ] = 100; // 수식이인덱스가 된다. 
scores[index[3 ]] = 100; // index[] 는정수배열

<8>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved#include <stdio.h >
intmain( void)
{
inti;
intscores[5 ];
scores[ 0]=10;
scores[1 ] = 20;
scores[2 ] = 30;
scores[3 ] = 40;
scores[4 ] = 50;
for(i=0;i < 5; i++)
printf ("scores[% d]=%d \n",i, scores[ i]);
return 0;
}배열선언예제
scores[0 ]=10
scores[1 ]=20
scores[2 ]=30
scores[3 ]=40
scores[4 ]=50
<9>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved배열과반복문
배열의가장큰장점은반복문을 사용하여서 배열의원소
를간편하게 처리할수있다는점
#define SIZE5
...
for(i=0;i<SIZE ;i++)
scores[ i]=0;scores[ 0]=0;
scores[ 1]=0;
scores[ 2]=0;
scores[ 3]=0;
scores[ 4]=0;

<10>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved#include <stdio.h >
#include <stdlib.h >
#define SIZE 5
intmain( void)
{
inti;
intscores[SIZE ];
for(i= 0; i< SIZE; i++)
scores[ i] = rand() % 100;
for(i= 0; i< SIZE; i++)
printf ("scores[% d]=%d \n", i, scores[ i]);
return 0;
}배열난수로채우기
scores[0 ]=41
scores[1 ]=67
scores[2 ]=34
scores[3 ]=0
scores[4 ]=69
<11>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved#include < stdio.h >
#define STUDENTS 10
intmain(void)
{
intscores [STUDENTS ];
intsum = 0;
inti, average;
for(i= 0; i< STUDENTS; i++)
{
printf ("학생들의 성적을입력하시오 : ");
scanf ("%d", &scores [i]);
}
for(i= 0; i< STUDENTS; i++)
sum += scores [i];
average = sum / STUDENTS;
printf ("성적평균= %d\n", average);
return 0;
}
학생들의 성적을입력하시오 : 10
학생들의 성적을입력하시오 : 20
학생들의 성적을입력하시오 : 30
학생들의 성적을입력하시오 : 40
학생들의 성적을입력하시오 : 50
성적평균 = 30
<12>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved
잘못된인덱스문제
인덱스가 배열의크기를벗어나게 되면프로그램에 치명적인 오류를
발생시킨다 . 
C에서는프로그래머가 인덱스가 범위를벗어나지 않았는지를 확인
하고책임을져야한다. 
intscores[5 ];
…
scores[5 ] = 60; // 치명적인 오류!
<13>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved중간점검
1.독립적인 여러개의변수대신에배열을사용하는 이유는무엇인가 ?
2.n개의원소를가지는배열의경우, 첫번째원소의번호는무엇인가 ?
3.n개의원소를가지는배열의경우, 마지막원소의번호는무엇인가 ?
4.배열원소의번호혹은위치를무엇이라고 하는가 ?
5.배열의크기보다 더큰인덱스를 사용하면 어떻게되는가 ?
6.배열의크기를나타낼때변수를사용할수있는가 ?

<14>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved배열의초기화

<15>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved배열의초기화

<16>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved배열의초기화

<17>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved#include <stdio.h >
intmain( void)
{
intscores[5 ] = { 31, 63, 62, 87, 14 };
inti;
for(i= 0; i< 5; i++)
printf ("scores[% d] = %d \n", i, scores[ i]);
return 0;
}배열초기화예제
scores[0 ] = 31
scores[1 ] = 63
scores[2 ] = 62
scores[3 ] = 87
scores[4 ] = 14
<18>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved#include <stdio.h >
intmain( void)
{
intscores[5 ] = { 31, 63 };
inti;
for(i= 0; i< 5; i++)
printf ("scores[% d] = %d \n", i, scores[ i]);
return 0;
}배열초기화예제
scores[0 ] = 31
scores[1 ] = 63
scores[2 ] = 0
scores[3 ] = 0
scores[4 ] = 0
<19>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved#include <stdio.h >
intmain( void)
{
intscores[5 ] ;
inti;
for(i= 0; i< 5; i++)
printf ("scores[% d] = %d \n", i, scores[ i]);
return 0;
}배열초기화예제
scores[0 ]=4206620
scores[1 ]=0
scores[2 ]=4206636
scores[3 ]=2018779649
scores[4 ]=1
<20>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved배열원소의개수계산
intscores[] = { 1, 2, 3, 4, 5, 6 };
inti, size;
size = sizeof (scores) / sizeof (scores[0 ]); 
for(i= 0; i< size ; i++)
printf ("%d ", scores[ i]); 배열원소개수자동계산

<21>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved배열의복사
inta[SIZE] ={1,2,3,4,5};
intb[SIZE ];
a=b; //컴파일오류!
inta[SIZE] ={1,2,3,4,5};
intb[SIZE ];
inti;
for(i=0;i<SIZE;i++)
a[i]=b[i];잘못된방법
올바른방법원소를일일이
복사한다

<22>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved배열의비교
#include <stdio.h >
#define SIZE 5
intmain( void)
{ 
inti; 
inta[SIZE] = { 1, 2, 3, 4, 5 }; 
intb[SIZE] = { 1, 2, 3, 4, 5 }; 
if( a == b ) // ①올바르지 않은배열비교
printf ("잘못된결과입니다 .\n"); 
else
printf ("잘못된결과입니다 .\n"); 
<23>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved배열의비교
for(i= 0; i< SIZE ; i++) // ②올바른배열비교
{ 
if( a[i] != b[ i] ) 
{ 
printf ("a[]와b[]는같지않습니다 .\n"); 
return 0; 
} 
} 
printf ("a[]와b[]는같습니다 .\n"); 
return 0; 
} 원소를하나씩비교한다

<24>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved중간점검
1.배열 a[6]의원소를 1, 2, 3, 4, 5, 6 으로초기화하는 문장을작성하라 .
2.배열의초기화에서 초기값이 개수가배열원소의개수보다 적은경
우에는어떻게되는가 ? 또반대로많은경우에는 어떻게되는가 ?
3.배열의크기를주지않고초기값의 개수로배열의크기를결정할수
있는가 ?
4.배열 a, b를if(a==b)와같이비교할수있는가 ? 
5.배열 a에배열 b를a=b;와같이대입할수있는가 ? 

<25>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reservedlab: 주사위던지기
이실습에서는 주사위를 1000번던져서각면이나오는
횟수를출력하여 보자. 
====================
면빈도
====================
0     1657
1     1679
2     1656
3     1694
4     1652
5     1662

<26>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved#include < stdio.h >
#include < stdlib.h >
#define SIZE 6
intmain(void)
{
intfreq[SIZE] = { 0 }; // 주사위의 면의빈도를 0으로한다.
inti;
for(i= 0; i< 10000; i++) // 주사위를 10000번던진다 .
++freq[ rand() % 6 ]; // 해당면의 빈도를하나증가한다 .
printf ("==================== \n");
printf ("면빈도\n");
printf ("==================== \n");
for(i= 0; i< SIZE; i++)
printf ("%3d     %3d \n", i, freq[i]);
return 0;
}
<27>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reservedlab: 극장예약시스템
배열을이용하여 간단한극장예약시스템을 작성
좌석은 10개
예약이끝난좌석은 1로, 예약이안된좌석은 0으로나타
낸다. 

<28>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved실행결과
좌석을예약하시겠습니까 ?(y 또는 n) y
-------------------------------
1 2 3 4 5 6 7 8 9 10
-------------------------------
0 0 0 0 0 0 0 0 0 0
몇번째좌석을예약하시겠습니까 ?1
예약되었습니다 .
좌석을예약하시겠습니까 ?(y 또는 n) y
-------------------------------
1 2 3 4 5 6 7 8 9 10
-------------------------------
1 0 0 0 0 0 0 0 0 0
몇번째좌석을예약하시겠습니까 ?1
이미예약된자리입니다 . 다른좌석을선택하세요
좌석을예약하시겠습니까 ?(y 또는 n) n
<29>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved알고리즘
while(1)
사용자로부터 예약여부(y 또는 n)를입력받는다 . 
if 입력 == 'y'
현재의좌석배치표 seats[]를출력한다 . 
좌석번호 i를사용자로부터 입력받는다 . 
if 좌석번호가 올바르면
seats[ i]=1
else 
에러메시지를 출력한다 .
else
종료한다 .
<30>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved실습: 극장좌석예약
#include <stdio.h >
#define SIZE 10
intmain( void)
{
char ans1;
intans2, i;
intseats[SIZE] = {0};
while (1)
{
printf ("좌석을예약하시겠습니까 ?(y 또는n) ");
scanf (" %c",&ans1 );
<31>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved실습: 극장좌석예약
if(ans1 == 'y')
{
printf ("------------------------------- \n");
printf (" 1 2 3 4 5 6 7 8 9 10 \n");
printf ("------------------------------- \n");
for(i= 0; i< SIZE; i++)
printf (" %d", seats[ i]);
printf ("\n");
printf ("몇번째좌석을예약하시겠습니까 );
scanf ("%d",&ans2 );현재좌석예약
상태출력
<32>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved실습: 극장좌석예약
if(ans2 <= 0 || ans2 > SIZE) {
printf ("1부터 10사이의숫자를입력하세요 \n");
continue ;
}
if(seats[ans2 -1] == 0) { // 예약되지 않았으면
seats[ans2 -1] = 1;
printf ("예약되었습니다 .\n");
}
else // 이미예약되었으면
printf ("이미예약된자리입니다 .\n");
}
elseif(ans1 == 'n')
return 0;
}
return 0;
}예약성공
<33>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved도전문제
위의프로그램에서는 한명만예약할수있다. 하지만극장에혼자서
가는경우는드물다 . 따라서한번에 2명을예약할수있도록위의프
로그램을 변경하여 보자. 

<34>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reservedlab: 최소값찾기
우리는인터넷에서 상품을살때, 가격비교사이트를 통
하여가장싼곳을검색한다 . 
일반적으로 배열에들어있는정수중에서최소값을찾는
문제와같다.

<35>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved실행결과
---------------------------------------
1 2  3  4  5  6  7  8  9  10
---------------------------------------
28 81 60 83 67 10 66 97 37 94
최소값은 10입니다.

<36>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved알고리즘
배열 prices[]의원소를난수로초기화한다 . 
일단첫번째원소를최소값 minium이라고가정한다 . 
for(i=1; i<배열의크기; i++)
if ( prices[ i] < minimum )
minimum = prices[ i]
반복이종료되면 minimum 에최소값이 저장된다 . 
<37>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved실습: 최소값찾기
#include < stdio.h >
#include <stdio.h >
#include <stdlib.h >
#include <time.h >
#define SIZE 10
intmain( void)
{
intprices[SIZE] = { 0 };
inti, minimum;
printf ("--------------------------------------- \n");
printf ("1 2 3 4 5 6 7 8 9 10 \n");
printf ("--------------------------------------- \n");
srand ( (unsigned )time( NULL ) );
for(i= 0; i< SIZE; i++){
prices[ i] = (rand()%100)+1;
printf ("%-3d ",prices[ i]);
}
printf ("\n\n");물건의가격
출력
<38>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved실습: 최소값찾기
minimum = prices[0];
for(i= 1; i< SIZE; i++)
{
if( prices[ i] < minimum )
minimum = prices[ i];
}
printf ("최소값은 %d입니다 .\n", minimum);
return 0;
}현재의최소값보
다배열원소가
작으면 , 배열원
소를최소값으로
복사한다 . 첫번째배열원소를최소
값으로가정
score [0]score [1] score [2]score [3]score [4] score [5]score [6]score [7]score [8]score [9]50403020102030406070
min<<<<>>>>>
1020304050302010 5040
<39>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved도전문제
위의프로그램에서는 최소값을 계산하였다 . 이번에는 배열의원소
중에서최대값을 찾도록변경하여 보자. 변수이름도적절하게 변경
하라. 

<40>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved배열과함수
배열의경우에는 사본이아닌원본이전달된다 . 

<41>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved배열과함수
#include <stdio.h >
#define STUDENTS 5
intget_average (intscores[], intn); // ①
intmain( void)
{ 
intscores[STUDENTS ] = { 1, 2, 3, 4, 5 }; 
intavg; 
avg= get_average (scores, STUDENTS);
printf ("평균은 %d입니다 .\n", avg); 
return 0; 
} 
intget_average (intscores[], intn) // ②
{ 
inti; 
intsum = 0; 
for(i= 0; i< n; i++) 
sum += scores[ i]; 
return sum / n; 
} 배열이인수인경우,
참조에의한호출
배열의원본이
score[]로전달
<42>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved배열이함수의인수인경우1/2
#include <stdio.h >
#define SIZE 7
voidmodify_array (inta[], intsize);
voidprint_array (inta[], intsize);
intmain( void)
{ 
intlist[SIZE] = { 1, 2, 3, 4, 5, 6, 7 } ; 
print_array (list, SIZE);
modify_array (list, SIZE);
print_array (list, SIZE);
return 0; 
} 배열은원본이전달된다 . (인수: 배열)
<43>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved배열이함수의인수인경우2/2
voidmodify_array (int a[], intsize)
{ 
inti; 
for(i= 0; i< size; i++) 
++a[i]; 
} 
voidprint_array (int a[], intsize)
{ 
inti; 
for(i= 0; i< size; i++) 
printf ("%3d " , a[i]); 
printf ("\n"); 
} 배열의원본이
a[]로전달
1234567 
2   3   4   5   6   7   8
<44>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved원본배열의변경을금지하는방법
voidprint_array (const inta[], intsize)
{
...
a[0] = 100; // 컴파일오류!
}함수안에서 a[]는변경할수없
다. 
const키워드는
변경이
불가능하다는
것을의미하겠죠 ?
<45>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved중간점검
1.배열을함수로전달하면 원본이전달되는가 ? 아니면복사본이 전달
되는가 ?
2.함수가전달받은 배열을변경하지 못하게하려면어떻게하여야하
는가?

<46>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved정렬이란 ?
정렬은물건을크기순으로 오름차순이나 내림차순으로
나열하는 것
정렬은컴퓨터공학분야에서 가장기본적이고 중요한알
고리즘중의 하나

<47>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved정렬이란 ?
정렬은자료탐색에있어서필수적이다 . 
(예) 만약사전에서 단어들이 정렬이안되어있다면 ?

<48>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved선택정렬 (selection sort)
선택정렬 (selection sort): 정렬이안된숫자들중에서 최소
값을선택하여 배열의첫번째요소와교환

<49>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved선택정렬 (selection sort)
선택정렬 (selection 
sort): 정렬이안된
숫자들중에서 최소
값을선택하여 배열
의첫번째요소와
교환

<50>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved선택정렬
#include <stdio.h >
#define SIZE 10
intmain( void)
{
intlist[SIZE] = { 3, 2, 9, 7, 1, 4, 8, 0, 6, 5 };
inti, j, temp, least;
for(i= 0; i< SIZE -1; i++)
{ 
least = i; 
for(j = i+ 1; j < SIZE; j++) 
if(list[j ] < list[least])
least = j;
temp = list[ i]; 
list[i] = list[least ];
list[least ] = temp;
}내부 for루프로서 (i+1)번째원소부터 배
열의마지막원소중에서최소값을 찾는
다.현재의최소값과 비교하여 더작은정
수가발견되면 그정수가들어있는인덱
스를 least에저장한다 .
list[i]와list[least] 를서로
교환
<51>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved선택정렬
for(i= 0;i < SIZE; i++)
printf ("%d ", list[ i]); 
printf ("\n");
return 0;
}
원래의배열
3 2 9 7 1 4 8 0 6 5 
정렬된배열
0 1 2 3 4 5 6 7 8 9
<52>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved변수의값을서로교환할때
다음과같이하면안됨
list[i] = list[least ];// list[i]의기존값은 파괴된다 !
list[least ] = list[i];
올바른방법
temp = list[ i]; 
list[i] = list[least ];
list[least ] = temp;

<53>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved순차탐색
순차탐색은배열의원소를순서대로 하나씩꺼내서탐색
키와비교하여 원하는값을찾아가는 방법
10 20 3040501050
비교성공
score [0]score [1]  score [2]score [3] score [4]  score [5]
<54>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved순차탐색
#include <stdio.h >
#define SIZE 10
intmain( void)
{
intkey, i;
intlist[SIZE] = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };
printf ("탐색할값을입력하시오 :");
scanf ("%d", &key);
for(i= 0; i< SIZE; i++)
if(list[i] == key)
printf ("탐색성공인덱스 = %d\n", i);
printf ("탐색종료\n");
return 0;
}for루프를이용하여 list[i]와key를비교하는
연산을배열의크기만큼 반복한다 .만약list[i]
와key가같으면탐색은성공되고 키값이발견
된배열의인덱스를 출력한다 .
탐색할값을입력하시오 :7
탐색성공인덱스 = 6
탐색종료
<55>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved이진탐색
이진탐색(binary search): 정렬된배열의중앙에위치한
원소와비교되풀이

<56>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved이진탐색
#include <stdio.h >
#define SIZE 16
intbinary_search (intlist[], intn, intkey);
intmain( void)
{
intkey;
intgrade [ SIZE] = { 2,6,11,13,18,20,22,27,29,30,34,38,41,42,45,47 };
printf ("탐색할값을입력하시오 :");
scanf ("%d", &key);
printf ("탐색결과= %d\n", binary_search (grade, SIZE, key));
return 0;
}
<57>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved이진탐색
intbinary_search (intlist[], intn, intkey)
{
intlow, high, middle;
low = 0;
high = n -1;
while ( low <= high ){ // 아직숫자들이 남아있으면
printf ("[%d %d] \n", low, high); // 하한과상한을출력한다 . 
middle = (low + high)/2 ; // 중간위치를계산한다 . 
if( key == list[middle] ) // 일치하면 탐색성공
return middle;
elseif( key > list[middle] )// 중간원소보다 크다면
low = middle + 1 ;// 새로운값으로 low 설정
else
high = middle -1;// 새로운값으로 high 설정
} 
return -1;
}
<58>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved실행결과
탐색할값을입력하시오 :34
[0 15]
[8 15]
[8 10]
[10 10]
탐색결과= 10
<59>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved2차원배열
ints[10]; // 1차원배열
ints[3][10]; // 2차원배열
ints[5][3][10]; // 3차원배열

<60>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved2차원배열에서인덱스

<61>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved2차원배열의활용
#include < stdio.h >
#include < stdlib.h >
#define ROWS 3
#define COLS 5
intmain(void)
{
ints[ROWS][COLS]; // 2 차원배열선언
inti, j; // 2개의인덱스변수
for (i= 0; i< ROWS; i++)
for (j = 0; j < COLS; j++)
s[i][j] = rand() % 100;
for (i= 0; i< ROWS; i++) {
for (j = 0; j < COLS; j++)
printf (" % 02d ", s[ i][j]);
printf ("\n");
}
return 0;
}
41 67 34 00 69
24 78 58 62 64
25 45 81 27 61
<62>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved2차원배열의초기화
int s[3][5] = { 
{0,1,2,3,4 },// 첫번째행의원소들의 초기값
{ 10, 11, 12, 13, 14 }, // 두번째행의원소들의 초기값
{ 20, 21, 22, 23, 24 } // 세번째행의원소들의 초기값
}; 

<63>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved2차원배열의초기화
ints[ ][5] = { 
{0,1,2,3,4 },// 첫번째행의원소들의 초기값
{ 10, 11, 12, 13, 14 }, // 두번째행의원소들의 초기값
{ 20, 21, 22, 23, 24 }, // 세번째행의원소들의 초기값
}; 

<64>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved2차원배열의초기화
ints[ ][5] = { 
0, 1, 2, 3, 4, // 첫번째행의원소들의 초기값
5, 6, 7, 8, 9, // 두번째행의원소들의 초기값
}; 

<65>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved예제
학생들의 성적기록표를 2차원배열에저장하고 각학생
의최종성적을계산해보자 .

<66>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved2차원배열의초기화
#include < stdio.h >
#define ROWS 3
#define COLS 5
intmain(void) {
inta[ROWS][COLS] = { { 87, 98, 80, 76, 3 },
{ 99, 89, 90, 90, 0 },
{ 65, 68, 50, 49, 0 }
};
inti;
for (i= 0; i< ROWS; i++) {
double final_scores = a[i][0] * 0.3 + a[ i][1] * 0.4 +
a[i][2] * 0.2 + a[ i][3] * 0.1 –a[i][4];
printf (“학생 #%i의최종성적 = %10.2f \n”, i+ 1, final_scores );
}
return 0;
}
<67>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved실행결과
학생 #1의최종성적 = 85.90
학생 #2의최종성적 = 92.30
학생 #3의최종성적 = 61.60
<68>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved행렬
행렬(matrix)는자연과학에서 많은문제를해결하는데
사용

<69>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved다차원배열을이용한행렬의표현
#include <stdio.h >
#define ROWS 3
#define COLS 3
intmain( void)
{ 
intA[ROWS][COLS] = { { 2,3,0 }, 
{ 8,9,1 }, 
{ 7,0,5 } }; 
intB[ROWS][COLS] = { { 1,0,0 }, 
{ 1,0,0 }, 
{ 1,0,0 } }; 
intC[ROWS][COLS]; 
<70>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved다차원배열을이용한행렬의표현
intr, c; 
// 두개의행렬을더한다 .
for(r = 0;r < ROWS; r++) 
for(c = 0;c < COLS; c++) 
C[r][c] = A[r][c] + B[r][c]; 
// 행렬을출력한다 .
for(r = 0;r < ROWS; r++) 
{ 
for(c = 0;c < COLS; c++) 
printf ("%d ", C[r][c]); 
printf ("\n"); 
} 
return 0;
}중첩for루프를이용하여 행렬A의각
원소들과 행렬의 B의각원소들을 서
로더하여행렬C에대입한다 .
3 3 0 
9 9 1 
8 0 5
<71>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved2차원배열을함수로전달하기
#include < stdio.h >
#define  YEARS 3
#define  PRODUCTS 5
intsum(intscores[YEARS][ PRODUCTS]);
intmain(void)
{
intsales[YEARS][PRODUCTS] = { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} };
inttotal_sale ;
total_sale = sum(sales);
printf ("총매출은 %d입니다 .\n", total_sale );
return 0;
}
<72>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved2차원배열을함수로전달하기
intsum(intscores [ YEARS][ PRODUCTS])
{
inty, p;
inttotal = 0;
for(y = 0; y < YEARS; y++)
for(p = 0; p < PRODUCTS; p++)
total += scores[y ][p];
return total;
}
<73>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved중간점검
1.다차원배열 inta[3][2][10] 에는몇개의원소가존재하는가 ?
2.다차원배열 inta[3][2][10] 의모든요소를 0으로초기화하는 문장을
작성하시오 .

<74>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reservedlab: 영상처리
디지털영상은픽셀들의 2차원배열이라 할수있다.

<75>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved실행결과

<76>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved#include < stdio.h >
void display( intimage[8][16])
{
for (intr = 0; r < 8; r++) {
for (intc = 0; c < 16; c++) {
if (image[r][c] == 0)
printf ("*");
else
printf ("_");
}
printf ("\n");
}
}
void inverse( intimg[8][16])
{
for (intr = 0; r < 8; r++) {
for (intc = 0; c < 16; c++) {
if (img[r][c] == 0)
img[r][c] = 1;
else
img[r][c] = 0;
}
}
}
<77>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reservedintmain(void)
{
intimage[8][16] = {
{ 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 },
{ 1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1 },
{ 1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1 },
{ 1,1,1,0,0,0,1,1,0,0,1,1,1,1,1,1 },
{ 1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1 },
{ 1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1 },
{ 1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1 },
{ 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 } };
printf ("변환전이미지 \n");
display(image);
inverse(image);
printf ("\n\n변환후이미지 \n");
display(image);
return 0;
}
<78>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reservedminiproject: tic -tac-toe
tic-tac-toe 게임은 2명의경기자가 오른쪽과 같은보드를
이용하여서 번갈아가며 O와X를놓는게임이다 . 
같은글자가가로, 세로, 혹은대각선상에놓이면이기게
된다. 

<79>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved실행결과

<80>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved알고리즘
보드를초기화한다 . 
while(1)
보드를화면에출력한다 . 
사용자로부터 좌표 x, y를받는다 . 
if (board[x][y] 가비어있으면 )
if( 현재경기자가 ‘X’이면 )
board[x][y] = ‘X’
else 
board[x][y] = ‘O’
else 
오류메시지를 출력한다
<81>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved소스
#include < stdio.h >
intmain(void)
{
char board[3][3];
intx, y, k, i;
// 보드를초기화한다 .
for (x = 0; x < 3; x++)
for (y = 0; y < 3; y++) board[x][y] = ' ';
// 사용자로부터 위치를받아서보드에표시한다 .
for (k = 0; k < 9; k++) {
printf ("(x, y) 좌표: ");
scanf (" %d %d", &x, &y);
board[x][y] = (k % 2 == 0) ? 'X' : 'O'; // 순번에따라 'X', 'O'중
<82>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved소스
// 보드를화면에그린다 .
for (i= 0; i< 3; i++) {
printf ("---|---|---\n");
printf ("%c | %c | %c \n", board[ i][0], board[ i][1], 
board[ i][2]);
}
printf ("---|---|---\n");
}
return 0;
}
<83>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reserved도전문제
(1) 위의코드를실행하면 상대방이 놓은곳에다시놓을수있다. 이것을방지하
는코드를추가하라 .
(2) 보드를분석하여서 게임이종료되었는지를 검사하는 함수를추가하라 .
(3) 컴퓨터가 자동으로 다음수를결정하도록 프로그램을 변경하라 . 가장간단
한알고리즘을 사용한다 . 예를들면비어있는첫번째좌표에놓는다 .

<84>
쉽게풀어쓴 C언어 Express© 2012 생능출판사 All rights reservedQ & A
